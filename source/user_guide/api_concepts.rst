ODP API 组件
=============

ODP程序围绕几个概念进行构建，每个开发者都应该熟悉这些概念。
主要的概念主要的是：线程、事件、队列、池、共享内存、缓冲区、数据包、PktIO、定时器和同步器。

线程（Thread）
--------------

线程是ODP中的基本编程单元。ODP应用程序被组织成执行设计工作的线程集合。
ODP线程可能或者可能不会与其他线程共享内存，这取决于具体实现。
线程有两种类型：控制线程和工作线程，他们由抽象类型 ``odp_thread_type_t`` 表示。

控制线程是组织工作线程工作的监督线程。
而工作线程则负责执行应用程序的主要逻辑，它采用的是RTC模型。
特别的是，工作线程一般运行于专用的处理核心上，特别是在多核心的处理环境中。
但是，如果需要，给定的实现可以在单核上运行（通常在较小和较低性能目标环境上）。

除了线程类型，线程还具有关联属性，例如，线程掩码和调度程序组，确定他们可以在哪里运行，以及他们可以处理的工作类型。


事件（Event）
-------------

队列（Queue）
-------------

池（Pool）
----------

共享内存（Shared Memory）
-------------------------

缓冲区（Buffer）
----------------

数据包（Packet）
----------------

报文接口（PktIO）
-----------------

时间（Time）
---------------

局部时间（Local time）
~~~~~~~~~~~~~~~~~~~~~~

全局时间（Global time）
~~~~~~~~~~~~~~~~~~~~~~~~

定时器（Timer）
---------------

同步器（Synchronizer）
----------------------
